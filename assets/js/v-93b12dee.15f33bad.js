(self.webpackChunkdiva_docs=self.webpackChunkdiva_docs||[]).push([[820],{6669:(e,t,i)=>{"use strict";i.r(t),i.d(t,{data:()=>o});const o={key:"v-93b12dee",path:"/development/prerequisites.html",title:"Prerequisites",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Requirements",slug:"requirements",children:[]},{level:2,title:"Repositories set up",slug:"repositories-set-up",children:[]},{level:2,title:"Access to container registry",slug:"access-to-container-registry",children:[]}],filePathRelative:"development/prerequisites.md",git:{contributors:[]}}},2451:(e,t,i)=>{"use strict";i.r(t),i.d(t,{default:()=>q});var o=i(6252);const n=(0,o.uE)('<h1 id="prerequisites"><a class="header-anchor" href="#prerequisites">#</a> Prerequisites</h1><p>Here we will explain how we set up most optimal environment for DIVA development and deployment. The following instructions are not mandatory, it should be possible to use other operating systems or software versions, but we can not guarantee a flawless experience. Most of the time we develop DIVA using virtual machines. There are host tools like VirtualBox or VMWare. You should be able to set up and manage a VM or run a Linux distribution bare metal. In the following, we will go through the steps necessary for preparing an environment in which DIVA can be run optimally.</p><h2 id="requirements"><a class="header-anchor" href="#requirements">#</a> Requirements</h2><p>The following is a list of requirements that must be met in order to work comfortably with all DIVA components during local development or deployment:</p><ul><li>Linux distribution (We recommend to use Ubuntu 18.04 or 20.04)</li><li>Git</li><li>Docker 20.10.x</li><li>Docker Compose 1.28.x</li><li>Node.js 14.16.x</li><li>Python3</li><li>Java</li></ul><p>The requirements for the technical specification of the machine depend strongly on what you intend to do with DIVA. On our development machines we run DIVA without any problems with the following specifications:</p><ul><li>i7 with 4 physical CPUs</li><li>16GB RAM</li><li>150GB SSD</li></ul><p>The production environment for DIVA must of course take into account a much higher volume of storage capacity requirements</p><h2 id="repositories-set-up"><a class="header-anchor" href="#repositories-set-up">#</a> Repositories set up</h2><p>All repositories are freely accessible on GitHub and can be cloned without authentication. Below is the list of existing repos:</p>',10),r={href:"https://github.com/FraunhoferISST/diva",target:"_blank",rel:"noopener noreferrer"},a=(0,o.Uk)("diva"),s=(0,o.Uk)(" - DIVA System Core containing all necessary components"),l={href:"https://github.com/FraunhoferISST/diva-docs",target:"_blank",rel:"noopener noreferrer"},c=(0,o.Uk)("diva-docs"),u=(0,o.Uk)(" - Repository for this documentation"),h={class:"custom-container warning"},p=(0,o.Wm)("p",{class:"custom-container-title"},"Git LFS",-1),d=(0,o.Uk)("Please note that we use "),m={href:"https://git-lfs.github.com/",target:"_blank",rel:"noopener noreferrer"},g=(0,o.Uk)("git-lfs"),f=(0,o.Uk)(" to manage large files like ML models or archives. You have to install and activate git-lfs for this repo to be able to download linked files through repo clone. This is necessary only if you plan development on some FaaS service."),b=(0,o.uE)('<p>Clone the <code>diva</code> repository with the following command:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/FraunhoferISST/diva.git\n</code></pre></div><h2 id="access-to-container-registry"><a class="header-anchor" href="#access-to-container-registry">#</a> Access to container registry</h2>',3),v=(0,o.Uk)("All images are continuously built in the CI pipeline and publicly available to pull without authentication in GitHub container registry. To be able to push, update or delete the images, you have to "),w={href:"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#authenticating-to-the-container-registry",target:"_blank",rel:"noopener noreferrer"},k=(0,o.Uk)("Authenticating to the Container registry"),y=(0,o.Uk)("."),W=(0,o.uE)('<div class="language-bash ext-sh"><pre class="language-bash"><code>docker login ghcr.io/fraunhoferisst/diva -u USERNAME --password YOUR_TOKEN\n</code></pre></div><p>After successful authentication you will be able to pull and update the images:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token comment"># pull an image</span>\ndocker pull ghcr.io/fraunhoferisst/diva/web-client:19.0.0\n\n<span class="token comment"># push an image</span>\ndocker push ghcr.io/fraunhoferisst/diva/web-client:19.0.0\n</code></pre></div>',3),U=(0,o.Uk)("To learn how to manage and containerize service with docker please refer to our detailed guide for "),A=(0,o.Uk)("Container and images management"),q={render:function(e,t){const i=(0,o.up)("OutboundLink"),q=(0,o.up)("RouterLink");return(0,o.wg)(),(0,o.j4)(o.HY,null,[n,(0,o.Wm)("ul",null,[(0,o.Wm)("li",null,[(0,o.Wm)("a",r,[a,(0,o.Wm)(i)]),s]),(0,o.Wm)("li",null,[(0,o.Wm)("a",l,[c,(0,o.Wm)(i)]),u])]),(0,o.Wm)("div",h,[p,(0,o.Wm)("p",null,[d,(0,o.Wm)("a",m,[g,(0,o.Wm)(i)]),f])]),b,(0,o.Wm)("p",null,[v,(0,o.Wm)("a",w,[k,(0,o.Wm)(i)]),y]),W,(0,o.Wm)("p",null,[U,(0,o.Wm)(q,{to:"/development/docker.html#container-and-images-management"},{default:(0,o.w5)((()=>[A])),_:1})])],64)}}}}]);