"use strict";(self.webpackChunkdiva_docs=self.webpackChunkdiva_docs||[]).push([[4777],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},m=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,f=u["".concat(s,".").concat(d)]||u[d]||l[d]||i;return n?o.createElement(f,a(a({ref:t},m),{},{components:n})):o.createElement(f,a({ref:t},m))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8163:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return l}});var o=n(7462),r=n(3366),i=(n(7294),n(3905)),a=["components"],c={id:"commits",title:"Committing changes"},s="Committing changes",p={unversionedId:"Development/Contribution/commits",id:"Development/Contribution/commits",title:"Committing changes",description:"We encourage all contributors to stick to the commit convention following the specification on Conventional Commits.",source:"@site/docs/04-Development/05-Contribution/03-commits.md",sourceDirName:"04-Development/05-Contribution",slug:"/Development/Contribution/commits",permalink:"/diva-docs/docs/next/Development/Contribution/commits",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"commits",title:"Committing changes"},sidebar:"divaSidebar",previous:{title:"Issues and pull request",permalink:"/diva-docs/docs/next/Development/Contribution/issues-and-prs"},next:{title:"Code style guidance",permalink:"/diva-docs/docs/next/Development/Contribution/code-styles"}},m={},l=[],u={toc:l};function d(e){var t=e.components,n=(0,r.Z)(e,a);return(0,i.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"committing-changes"},"Committing changes"),(0,i.kt)("p",null,"We encourage all contributors to stick to the commit convention following the specification on ",(0,i.kt)("a",{parentName:"p",href:"https://www.conventionalcommits.org/en/v1.0.0/"},"Conventional Commits"),".\nWith this restriction, we want to create a consistent and trackable history of changes across all system components.\nFurthermore, rule-compliant commits are important for the automatic generation of the CHANGELOG.md according to the specification\nfrom ",(0,i.kt)("a",{parentName:"p",href:"https://keepachangelog.com/en/1.0.0/"},"keepachangelog.com"),"."),(0,i.kt)("p",null,"In general, write the commits in imperative present tens. The commit message should be structured as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"<type>[optional scope]: <description>\n\n[optional body]\n\n[optional footer(s)]\n")),(0,i.kt)("p",null,"We are using the following types: ",(0,i.kt)("inlineCode",{parentName:"p"},"feat"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"feat"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"chore"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"test"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"docs"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"feat"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"refactor"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ci"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"release"),".\nThe list ist not comprehensive and can be extended on demand."),(0,i.kt)("p",null,"Append ",(0,i.kt)("inlineCode",{parentName:"p"},"!")," for breaking changes to a type."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Scopes are useful")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The scope in the commit message help a lot to understand which parts of the system a commit affects. Always try to specify\nthe scope in your messages. When working on services, you can use the abbreviation of the service name as the scope.\nIf the change can be assigned to an issue, you can derive the scopes from the labels of the corresponding issues."))),(0,i.kt)("p",null,"To give you an orientation consider some examples of good commits."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"feat!(UM): change the response for GET operation\n\nThis commit introduces changes to the response format \nof the User Management GET operation to adher to new OpenAPI specification \n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"release(client): v20.0.0\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"ci: update actions\n")))}d.isMDXComponent=!0}}]);