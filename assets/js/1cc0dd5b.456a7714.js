"use strict";(self.webpackChunkdiva_docs=self.webpackChunkdiva_docs||[]).push([[747],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3648:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={id:"rules",title:"Rules"},l=void 0,c={unversionedId:"Development/Data Governance/rules",id:"Development/Data Governance/rules",title:"Rules",description:"DIVA provides an RESTful API that allows an administrator to create, update and delete so called business rules. Business rules can be used to define specific reactions to events on the platform. For example, they are used to delete reviews for entities when the entity to which the review refers is deleted.",source:"@site/docs/04-Development/05-Data Governance/03-rules.md",sourceDirName:"04-Development/05-Data Governance",slug:"/Development/Data Governance/rules",permalink:"/diva-docs/docs/next/Development/Data Governance/rules",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"rules",title:"Rules"},sidebar:"divaSidebar",previous:{title:"Policies",permalink:"/diva-docs/docs/next/Development/Data Governance/policies"},next:{title:"How you can help",permalink:"/diva-docs/docs/next/Development/Contribution/introduction"}},u={},d=[{value:"Business Rules Executor",id:"business-rules-executor",level:2}],p={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"DIVA provides an RESTful API that allows an administrator to create, update and delete so called business rules. Business rules can be used to define specific reactions to events on the platform. For example, they are used to delete reviews for entities when the entity to which the review refers is deleted."),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Rules have many similarities with ",(0,i.kt)("a",{parentName:"p",href:"./policies"},"policies"),", to better understand the following you can start with them first."))),(0,i.kt)("p",null,"Business rules are triggered by events that are available in a Kafka topic.\nA business rule has a specific data model that you need to consider.\nHere you can see an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n    id: "rule:uuid:8622b14e-6ad4-4083-8748-2d0ea462a7ee",\n    title: "Delete review if corresponding entity was deleted",\n    isActive: true,\n    isEditable: true,\n    scope: {\n      channel: "datanetwork.events",\n      "payload.type": "delete",\n      "payload.object.id": "edge:.*",\n      "payload.attributedTo[0].object.id": "review:.*",\n    },\n    condition: {\n      and: [\n        {\n          cypher: {\n            query:\n              "MATCH (r:review {id:\'{{payload.attributedTo[0].object.id}}\'})-[:isReviewOf]->(entity) RETURN (count(entity)=0) as ruleMet",\n          },\n        },\n      ],\n    },\n    actions: [\n      {\n        headers: {\n          "x-diva": { actorId: "{{payload.actor.id}}" },\n        },\n        method: "DELETE",\n        endpoint:\n          "{{entity-management}}/reviews/{{payload.attributedTo[0].object.id}}",\n        ignoreErrors: [\n          {\n            statusCode: 404, // already deleted, ignore it\n          },\n          {\n            statusCode: 403, // forbidden is forbidden, try not to write rules that confront with the policies\n          },\n        ],\n      },\n    ],\n  }\n')),(0,i.kt)("p",null,"If you are using our RESTful API, you don't need to set an ",(0,i.kt)("inlineCode",{parentName:"p"},"id")," when you create a new business rule.\nPlease take care, that you set all the other fields."),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"field"),(0,i.kt)("th",{parentName:"tr",align:null},"description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"title"),(0,i.kt)("td",{parentName:"tr",align:null},"give a good title so you can understand what this rule should do")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"isActive"),(0,i.kt)("td",{parentName:"tr",align:null},"DIVA only considers rules if they are active (true)")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"isEditable"),(0,i.kt)("td",{parentName:"tr",align:null},"Prevents the accidental deletion of a rule. WARNING: If you want to delete this rule if this is set to false, ask a system admin to delete this rule insode our MongoDB")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"scope"),(0,i.kt)("td",{parentName:"tr",align:null},"Here you can specify what must be present in a kafka message. You can use RegEx on the right hand of the key-value pais.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"condition"),(0,i.kt)("td",{parentName:"tr",align:null},"Here you can specify additional conditions that must be met, before we execute actions. There are different kinds of conditions. You can check in mongoDB or neo4j. For more examples check our code.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"actions"),(0,i.kt)("td",{parentName:"tr",align:null},"This is what should be triggered if scope and conditions are met. Currently only HTTP requests can be executed. You can ignore specific HTTP status code that are fine to you.")))),(0,i.kt)("h2",{id:"business-rules-executor"},"Business Rules Executor"),(0,i.kt)("p",null,"The business-rules-executor is the service that processes the reactions defined by the rules and based on events in the Kafka topic. It also handles template substitution and query execution. Many of the specifics (e.g. re-caching of rules etc.) for this service are similar to the (business-decision-point)","[./policies/#business-decision-point]","."))}m.isMDXComponent=!0}}]);