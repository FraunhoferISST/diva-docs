"use strict";(self.webpackChunkdiva_docs=self.webpackChunkdiva_docs||[]).push([[2710],{3905:function(e,n,t){t.d(n,{Zo:function(){return l},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},l=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(t),f=i,v=d["".concat(s,".").concat(f)]||d[f]||p[f]||o;return t?r.createElement(v,a(a({ref:n},l),{},{components:t})):r.createElement(v,a({ref:n},l))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=d;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var u=2;u<o;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8920:function(e,n,t){t.r(n),t.d(n,{assets:function(){return l},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return p}});var r=t(7462),i=t(3366),o=(t(7294),t(3905)),a=["components"],c={id:"policies",title:"Policies"},s="Policies",u={unversionedId:"Development/Data Governance/policies",id:"Development/Data Governance/policies",title:"Policies",description:"Basic Behaviour",source:"@site/docs/04-Development/05-Data Governance/02-policies.md",sourceDirName:"04-Development/05-Data Governance",slug:"/Development/Data Governance/policies",permalink:"/diva-docs/docs/next/Development/Data Governance/policies",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"policies",title:"Policies"},sidebar:"divaSidebar",previous:{title:"Data Governance",permalink:"/diva-docs/docs/next/Development/Data Governance/introduction"},next:{title:"Rules",permalink:"/diva-docs/docs/next/Development/Data Governance/rules"}},l={},p=[{value:"Basic Behaviour",id:"basic-behaviour",level:2},{value:"Structure of Policies",id:"structure-of-policies",level:2},{value:"Business Decision Point",id:"business-decision-point",level:2},{value:"Securing a Service",id:"securing-a-service",level:2}],d={toc:p};function f(e){var n=e.components,t=(0,i.Z)(e,a);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"policies"},"Policies"),(0,o.kt)("h2",{id:"basic-behaviour"},"Basic Behaviour"),(0,o.kt)("h2",{id:"structure-of-policies"},"Structure of Policies"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'{\n    id: "policy:uuid:a229c1a9-9371-4d84-89b7-81b662250c7d",\n    title: "User can execute PATCH on itself (excluding roles and groups)",\n    description:\n      "The policy allows an user to edit own data, excluding the fields for roles and groups",\n    isActive: true,\n    isEditable: true,\n    scope: {\n      "headers.serviceName": "entity-management",\n      path: "^/users/user:uuid:[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}.*",\n      method: "PATCH",\n    },\n    condition: {\n      and: [\n        {\n          inputData: {\n            query: {\n              "headers.diva.actorId": "{{params.id}}",\n            },\n          },\n        },\n      ],\n    },\n    excludes: ["groups", "roles"],\n}\n')),(0,o.kt)("h2",{id:"business-decision-point"},"Business Decision Point"),(0,o.kt)("h2",{id:"securing-a-service"},"Securing a Service"))}f.isMDXComponent=!0}}]);