"use strict";(self.webpackChunkdiva_docs=self.webpackChunkdiva_docs||[]).push([[9680],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=o,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var u=2;u<i;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9308:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var r=n(7462),o=n(3366),i=(n(7294),n(3905)),a=["components"],l={id:"prerequisites",title:"Prerequisites"},s=void 0,u={unversionedId:"Development/prerequisites",id:"Development/prerequisites",title:"Prerequisites",description:"Here we will explain how we set up most optimal environment for DIVA development and deployment.",source:"@site/docs/04-Development/01-prerequisites.md",sourceDirName:"04-Development",slug:"/Development/prerequisites",permalink:"/diva-docs/docs/next/Development/prerequisites",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"prerequisites",title:"Prerequisites"},sidebar:"divaSidebar",previous:{title:"Configuration",permalink:"/diva-docs/docs/next/Deployment/configuration"},next:{title:"Local Development",permalink:"/diva-docs/docs/next/Development/local-development"}},p={},c=[{value:"Requirements",id:"requirements",level:2},{value:"Repositories Setup",id:"repositories-setup",level:2},{value:"Access to Container Registry",id:"access-to-container-registry",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Here we will explain how we set up most optimal environment for DIVA development and deployment.\nThe following instructions are not mandatory, it should be possible to use other operating systems or software versions, but we can not guarantee a flawless experience.\nMost of the time we develop DIVA using virtual machines.\nThere are host tools like VirtualBox or VMWare.\nYou should be able to set up and manage a VM or run a Linux distribution bare metal.\nIn the following, we will go through the steps necessary for preparing an environment in which DIVA can be run optimally."),(0,i.kt)("h2",{id:"requirements"},"Requirements"),(0,i.kt)("p",null,"The following is a list of requirements that must be met in order to work comfortably with all DIVA components during\nlocal development or deployment:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Linux distribution (We recommend to use Ubuntu 18.04, 20.04 or 22.04)"),(0,i.kt)("li",{parentName:"ul"},"Git"),(0,i.kt)("li",{parentName:"ul"},"Docker 20.10.x"),(0,i.kt)("li",{parentName:"ul"},"Docker Compose 1.28.x"),(0,i.kt)("li",{parentName:"ul"},"Node.js 16.14.x"),(0,i.kt)("li",{parentName:"ul"},"Python3"),(0,i.kt)("li",{parentName:"ul"},"Java")),(0,i.kt)("p",null,"The requirements for the technical specification of the machine depend strongly on what you intend to do with DIVA.\nOn our development machines we run DIVA without any problems with the following specifications:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"i7 with 4 physical CPUs"),(0,i.kt)("li",{parentName:"ul"},"16GB RAM"),(0,i.kt)("li",{parentName:"ul"},"150GB SSD")),(0,i.kt)("h2",{id:"repositories-setup"},"Repositories Setup"),(0,i.kt)("p",null,"All repositories are freely accessible on GitHub and can be cloned without authentication.\nBelow is the list of existing repos:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/FraunhoferISST/diva"},"diva")," - DIVA System Core containing all necessary components"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/FraunhoferISST/diva-docs"},"diva-docs")," - Repository for this documentation ")),(0,i.kt)("p",null,"Clone the ",(0,i.kt)("inlineCode",{parentName:"p"},"diva")," repository with the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/FraunhoferISST/diva.git\n")),(0,i.kt)("h2",{id:"access-to-container-registry"},"Access to Container Registry"),(0,i.kt)("p",null,"All images are continuously built in the CI pipeline and publicly available to pull without authentication in GitHub container registry.\nTo be able to push, update or delete the images, you have to ",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-container-registry#authenticating-to-the-container-registry"},"Authenticating to the Container registry"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"docker login ghcr.io/fraunhoferisst/diva -u USERNAME --password YOUR_TOKEN\n")),(0,i.kt)("p",null,"After successful authentication you will be able to pull and update the images:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"# pull an image\ndocker pull ghcr.io/fraunhoferisst/diva/web-client:19.0.0\n\n# push an image\ndocker push ghcr.io/fraunhoferisst/diva/web-client:19.0.0\n")),(0,i.kt)("p",null,"To learn how to manage and containerize service with docker please refer to our detailed guide for ",(0,i.kt)("a",{parentName:"p",href:"/docs/Development/Development/docker-deployment#container-and-images-management"},"Container and images management")))}d.isMDXComponent=!0}}]);